name: "Update Prod Version"

on:
  repository_dispatch:
    types: [update_prod_version]

jobs:
  get-last-prod-version:
    runs-on: self-hosted

    outputs:
      version: ${{ steps.gv.outputs.last-prod-version }}

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout on master branch
        uses: actions/checkout@v2
        with:
          ref: master
          fetch-depth: 0

      - name: Get last prod version
        id: gv
        run: |
          set -x

          git_describe=$(git describe)
          last_prod_version=$(echo "$git_describe" | egrep -o "^[0-9]+\.[0-9]+\.[0-9]+")

          if [[ -z "$last_prod_version" ]]; then
            echo "Error: wrong format for prod annotation tag"
            echo "git describe result is \"$git_describe\""
            exit 255
          fi

          echo "::set-output name=last-prod-version::${last_prod_version}"

  update-cmdb:
    needs: [ get-last-prod-version ]

    runs-on: self-hosted

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout cmdb-prod
        uses: actions/checkout@v2
        with:
          repository: marathonoil/esp-analytics-infrastructure
          ref: cmdb-prod
          token: ${{ secrets.GH_PACKAGES_TOKEN }}
          path: './esp-analytics-infrastructure'

      - name: Update version in cmdb
        run: |
          #TODO: add VERSION as input to provide an option to deploy custom version
          set -x

          repo_name=$(echo "${GITHUB_REPOSITORY}" | awk -F'/' '{print $NF}')

          cd ${GITHUB_WORKSPACE}/esp-analytics-infrastructure
          ./update.py "${repo_name}" "${{ needs.get-last-prod-version.outputs.version }}"

          git config --global user.email "MDP_CI@marathonoil.com"
          git config --global user.name "MDP CI GitHub"

          git add cmdb.json
          git commit -m "Updated ${repo_name} ${{ needs.get-last-prod-version.outputs.version }}"
          git push

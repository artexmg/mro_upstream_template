USE ROLE SYSADMIN;
CREATE SCHEMA IF NOT EXISTS ${environment}_${db_name}.STAGING;
CREATE SCHEMA IF NOT EXISTS ${environment}_${db_name}.PUBLISH;


USE ROLE SECURITYADMIN;
CREATE ROLE IF NOT EXISTS ${environment}_ROLE_${db_name}_SVC_EMR_WRITE;
CREATE USER IF NOT EXISTS ${environment}_${db_name}_SVC_EMR LOGIN_NAME = '${environment}_${db_name}_SVC_EMR' DISPLAY_NAME='${environment}_${db_name}_SVC_EMR' DEFAULT_ROLE=${environment}_ROLE_${db_name}_SVC_EMR_WRITE DEFAULT_WAREHOUSE=${environment}_VWH_${db_name}_TRANSFORMATIONS;
GRANT USAGE, OPERATE ON WAREHOUSE ${environment}_VWH_${db_name}_TRANSFORMATIONS TO ROLE ${environment}_ROLE_${db_name}_SVC_EMR_WRITE;
GRANT USAGE ON DATABASE ${environment}_${db_name} TO ROLE ${environment}_ROLE_${db_name}_SVC_EMR_WRITE;
GRANT USAGE, CREATE TABLE, CREATE VIEW, CREATE MATERIALIZED VIEW, CREATE FILE FORMAT, CREATE STAGE, CREATE PIPE, CREATE STREAM, CREATE TASK, CREATE SEQUENCE, CREATE PROCEDURE, MONITOR ON SCHEMA ${environment}_${db_name}.PUBLISH TO ROLE ${environment}_ROLE_${db_name}_SVC_EMR_WRITE;
GRANT USAGE, CREATE TABLE, CREATE VIEW, CREATE MATERIALIZED VIEW, CREATE FILE FORMAT, CREATE STAGE, CREATE PIPE, CREATE STREAM, CREATE TASK, CREATE SEQUENCE, CREATE PROCEDURE, MONITOR ON SCHEMA ${environment}_${db_name}.STAGING TO ROLE ${environment}_ROLE_${db_name}_SVC_EMR_WRITE;

GRANT ALL ON FUTURE TABLES IN SCHEMA ${environment}_${db_name}.PUBLISH TO ROLE ${environment}_ROLE_${db_name}_SVC_EMR_WRITE;
GRANT ALL ON FUTURE TABLES IN SCHEMA ${environment}_${db_name}.STAGING TO ROLE ${environment}_ROLE_${db_name}_SVC_EMR_WRITE;

GRANT ROLE ${environment}_ROLE_${db_name}_SVC_EMR_WRITE TO USER ${environment}_${db_name}_SVC_EMR;
GRANT ROLE ${environment}_ROLE_${db_name}_SVC_EMR_WRITE TO ROLE SYSADMIN;
